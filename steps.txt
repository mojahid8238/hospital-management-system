Here is a step-by-step guide to integrate a video calling system using Jitsi Meet into your hospital management project.

**Step 1: Create the Video Call Page**

1.  Create a new file named `video_call.php` in the root directory of your project.
2.  This page will embed the Jitsi video conference. It will get the room name from the URL.
3.  Add the following code to `video_call.php`:

    ```php
    <?php
    session_start();
    // include('includes/auth.php'); // Ensure user is logged in
    $room_name = "test-room";
    if(isset($_GET['room'])) {
        $room_name = htmlspecialchars($_GET['room']);
    }
    ?>
    <!DOCTYPE html>
    <html>
    <head>
        <title>Video Call</title>
        <style>
            body, html {
                margin: 0;
                padding: 0;
                height: 100%;
                overflow: hidden;
            }
            #meet {
                height: 100%;
                width: 100%;
            }
        </style>
    </head>
    <body>
        <div id="meet"></div>
        <script src="https://meet.jit.si/external_api.js"></script>
        <script>
            const domain = 'meet.jit.si';
            const options = {
                roomName: '<?php echo $room_name; ?>',
                width: '100%',
                height: '100%',
                parentNode: document.querySelector('#meet'),
                userInfo: {
                    // email: 'email@example.com',
                    // displayName: 'Your Name'
                }
            };
            const api = new JitsiMeetExternalAPI(domain, options);
        </script>
    </body>
    </html>
    ```

**Step 2: Modify the Doctor's Dashboard to Start a Call**

1.  Open the `doctor/dashboard.php` file.
2.  In the section where appointments are listed, add a "Start Call" button for each appointment(it is available and it's name is complete).
3.  This button will link to the `video_call/video_call.php` page, passing a unique room name. A good unique room name would be based on the appointment ID (e.g., `appointment-` followed by the appointment ID).

    Example code to add in your appointments loop in `doctor/dashboard.php`:

    ```php
    // Inside your loop that displays appointments
    $appointment_id = $row['appointment_id']; // or whatever your appointment ID column is
    $room_name = 'hms-appointment-' . $appointment_id;
    echo '<td><a href="../video_call.php?room=' . $room_name . '" target="_blank" class="btn btn-primary">Start Call</a></td>';
    ```
    *Note: You might need to adjust the path to `video_call.php` based on your file structure.*

**Step 3: Modify the Patient's Dashboard to Join a Call**

1.  Open the `patient/dashboard.php` file.
2.  Similar to the doctor's dashboard, in the section where appointments are listed, you'll need to add a "Join Call" button.
3.  This button should only appear when the doctor has started the call. To achieve this, you can add a new column to your `appointments` table in the database, for example, `video_call_status` which can be 'active' or 'inactive'. When the doctor clicks "Start Call", you would update this status.

    For a simpler approach without database changes, you can have the "Join Call" button always visible for upcoming appointments, and the patient can join at the scheduled time. The doctor would need to have started the call for the meeting to begin.

    Example code to add in your appointments loop in `patient/dashboard.php`:

    ```php
    // Inside your loop that displays appointments
    $appointment_id = $row['appointment_id']; // or whatever your appointment ID column is
    $room_name = 'hms-appointment-' . $appointment_id;
    echo '<td><a href="../video_call.php?room=' . $room_name . '" target="_blank" class="btn btn-success">Join Call</a></td>';
    ```

**Step 4: Notification for the Patient (Simple Implementation)**

To notify the patient that the doctor has started the call, you can implement a simple polling mechanism on the patient's dashboard.

1.  **Database Change (Recommended):**
    *   Add a new column to your `appointments` table, for example, `is_call_active` (TINYINT, default 0).
    *   When the doctor clicks "Start Call", you'll need an AJAX call to a new PHP script (e.g., `start_call.php`) that updates `is_call_active` to 1 for that appointment. The "Start Call" button would trigger this AJAX call and then open the video call page.

2.  **Patient Dashboard (`patient/dashboard.php`):**
    *   Add a JavaScript snippet that periodically checks the status of the call for their upcoming appointment.
    *   If the call is active, it can display a notification or enable the "Join Call" button.

    Example JavaScript using jQuery (you might need to include jQuery if you haven't already):

    ```html
    <!-- Add this to patient/dashboard.php -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
    $(document).ready(function() {
        function checkCallStatus() {
            // Assuming you have the appointment ID available in the DOM
            let appointmentId = $('.appointment-row').data('appointment-id');
            if (appointmentId) {
                $.ajax({
                    url: 'check_call_status.php', // You need to create this file
                    type: 'POST',
                    data: { appointment_id: appointmentId },
                    success: function(response) {
                        if (response === 'active') {
                            // Show a notification and/or the join button
                            $('#join-call-btn-' + appointmentId).show();
                            alert('Your doctor has started the video call.');
                            // To avoid repeated alerts, you might want to set a flag
                        }
                    }
                });
            }
        }
        // Check every 10 seconds
        setInterval(checkCallStatus, 10000);
    });
    </script>
    ```

3.  **Create `video_call/check_call_status.php`:**
    This file would check the `is_call_active` flag in the database for the given appointment ID and echo "active" if it's 1.

This guide provides a basic framework. You'll need to adapt the code to your specific database schema and existing application logic.